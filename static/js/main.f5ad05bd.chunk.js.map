{"version":3,"sources":["contexts/theme.js","portfolio.js","components/Navbar/Navbar.js","components/Header/Header.js","components/About/About.js","components/ProjectContainer/ProjectContainer.js","components/Projects/Projects.js","components/ExpContainer/ExpContainer.js","components/Exps/Exps.js","components/Skills/Skills.js","components/ScrollToTop/ScrollToTop.js","components/Contact/Contact.js","components/Footer/Footer.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","themeName","setThemeName","useEffect","darkMediaQuery","window","matchMedia","matches","addEventListener","e","Provider","value","toggleTheme","name","localStorage","setItem","header","about","linkedin","github","projects","description","stack","sourceCode","livePreview","exps","position","dates","skills","contact","Navbar","useContext","showNavList","setShowNavList","toggleNavList","className","style","display","length","href","onClick","type","Header","homepage","title","About","role","resume","social","target","rel","ProjectContainer","project","map","item","uniqid","Projects","id","ExpContainer","exp","Exps","Skills","skill","ScrollToTop","isVisible","setIsVisible","toggleVisibility","pageYOffset","removeEventListener","fontSize","Contact","Footer","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5ad05bd.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ThemeContext = createContext()\n\nconst ThemeProvider = ({ children }) => {\n  const [themeName, setThemeName] = useState('light')\n\n  useEffect(() => {\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light')\n    darkMediaQuery.addEventListener('change', (e) => {\n      setThemeName(e.matches ? 'dark' : 'light')\n    });\n  }, [])\n\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark'\n    localStorage.setItem('themeName', name)\n    setThemeName(name)\n  }\n\n  return (\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport { ThemeProvider, ThemeContext }\n","const header = {\n  // all the properties are optional - can be left empty or deleted\n  homepage: 'https://AbhinavTiruvee.github.io',\n  title: 'AT',\n}\n\nconst about = {\n  // all the properties are optional - can be left empty or deleted\n  name: 'Abhinav Tiruveedhula',\n  role: 'Software Developer',\n  description:\n    'I am a Computer Science major currently enrolled at the University of Texas at Austin, driven by a strong passion for software development. With two previous internships completed, I am eagerly seeking an internship opportunity for the summer of 2024. If you have a role that aligns with my skill set, please get in touch with me.',\n  resume: 'https://drive.google.com/file/d/1HvshCj_ZCDxs9Es004-nslM4UhWsVS-6/view?usp=sharing',\n  social: {\n    linkedin: 'https://www.linkedin.com/in/abhinav-tiruveedhula/',\n    github: 'https://github.com/AbhinavTiruvee',\n  },\n}\n\nconst projects = [\n  // projects can be added an removed\n  // if there are no projects, Projects section won't show up\n  {\n    name: 'Impact of Online Stock Recommendations',\n    description:\n      'Research and research report on validity of online stock recommendations before 2017',\n    stack: ['R', 'Python', 'Excel'],\n    sourceCode: 'https://github.com/AbhinavTiruvee/OnlineStockRecommendations',\n  },\n  {\n    name: 'UT Dining: Campus Dining Assistant',\n    description: 'Developed an app in a three person team that displays UT Austin dining hall menus',\n    stack: ['Swift', 'Python'],\n    livePreview: 'https://apps.apple.com/us/app/ut-dining/id6468611223',\n  },\n  {\n    name: 'Personal Portfolio Website',\n    description: 'Made a website that provides information about my software development background',\n    stack: ['HTML', 'CSS', 'JavaScript', 'React'],\n    sourceCode: 'https://github.com/AbhinavTiruvee/newportfolio',\n  },\n  {\n    name: 'Valorant Statistics using APIs',\n    description:\n      'From a given Valorant player\\'s username, advanced metrics are given using the Valorant API',\n    stack: ['Python'],\n    sourceCode: 'https://github.com/AbhinavTiruvee/ValorantStats',\n  },\n  {\n    name: 'Dots & Boxes using Networking',\n    description: 'Dots & Boxes game that two players can play across a network connection',\n    stack: ['Java'],\n    sourceCode: 'https://github.com/AbhinavTiruvee/DotsAndBoxes'\n  },\n  {\n    name: 'Sports Betting ML Model',\n    description: 'Developing a machine learning model aimed at providing sports betting recommendations',\n    stack: ['Python']\n  }\n]\n\nconst exps = [\n  {\n    name: 'Tecmend',\n    position: 'Full Stack Development Intern',\n    dates: 'Jan 2023 - May 2023',\n    description: 'Utilized skills in Python and Django to add to three projects\\'s backends over the course of the internship. Gained project-based experience in web applications, APIs, and databases.',\n    stack: ['Python', 'Django', 'React', 'JavaScript'],\n  },\n  {\n    name: 'Springworks',\n    position: 'Sofware Development Engineering Intern',\n    dates: 'May 2022 - August 2022',\n    description: 'Contributed to four machine learning projects, culminating in the creation of a OCR program. Gained valuable experience in project management, teamwork, and agile development methodologies.',\n    stack: ['Python', 'AWS', 'Docker', 'Postman'],\n  },\n]\n\nconst skills = [\n  // skills can be added or removed\n  // if there are no skills, Skills section won't show up\n  'Python',\n  'Java',\n  'R',\n  'SQL',\n  'JavaScript',\n  'React',\n  'Django',\n  'Excel',\n  'AWS',\n  'Docker',\n  'Postman',\n  'Git',\n]\n\nconst contact = {\n  // email is optional - if left empty Contact section won't show up\n  email: 'abhinav.tiruveedhula@utexas.edu',\n}\n\nexport { header, about, projects, exps, skills, contact }\n","import { useContext, useState } from 'react'\nimport Brightness2Icon from '@material-ui/icons/Brightness2'\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { ThemeContext } from '../../contexts/theme'\nimport { projects, exps, skills, contact } from '../../portfolio'\nimport './Navbar.css'\n\nconst Navbar = () => {\n  const [{ themeName, toggleTheme }] = useContext(ThemeContext)\n  const [showNavList, setShowNavList] = useState(false)\n\n  const toggleNavList = () => setShowNavList(!showNavList)\n\n  return (\n    <nav className='center nav'>\n      <ul\n        style={{ display: showNavList ? 'flex' : null }}\n        className='nav__list'\n      >\n      \n        {exps.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#exps'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Experience\n            </a>\n          </li>\n        ) : null}\n        {projects.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#projects'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Projects\n            </a>\n          </li>\n        ) : null}\n        {skills.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#skills'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Skills\n            </a>\n          </li>\n        ) : null}\n\n        {contact.email ? (\n          <li className='nav__list-item'>\n            <a\n              href='#contact'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Contact\n            </a>\n          </li>\n        ) : null}\n      </ul>\n\n      <button\n        type='button'\n        onClick={toggleTheme}\n        className='btn btn--icon nav__theme'\n        aria-label='toggle theme'\n      >\n        {themeName === 'dark' ? <WbSunnyRoundedIcon /> : <Brightness2Icon />}\n      </button>\n\n      <button\n        type='button'\n        onClick={toggleNavList}\n        className='btn btn--icon nav__hamburger'\n        aria-label='toggle navigation'\n      >\n        {showNavList ? <CloseIcon /> : <MenuIcon />}\n      </button>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import { header } from '../../portfolio'\nimport Navbar from '../Navbar/Navbar'\nimport './Header.css'\n\nconst Header = () => {\n  const { homepage, title } = header\n\n  return (\n    <header className='header center'>\n      <h3>\n        {homepage ? (\n          <a href={homepage} className='link'>\n            {title}\n          </a>\n        ) : (\n          title\n        )}\n      </h3>\n      <Navbar />\n    </header>\n  )\n}\n\nexport default Header\n","import GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport { about } from '../../portfolio'\nimport './About.css'\n\nconst About = () => {\n  const { name, role, description, resume, social } = about\n\n  return (\n    <div className='about center'>\n      {name && (\n        <h1>\n          <span className='about__name'>{name}</span>\n        </h1>\n      )}\n\n      {role && <h2 className='about__role'>{role}</h2>}\n      <p className='about__desc'>{description && description}</p>\n\n      <div className='about__contact center'>\n        {resume && (\n          <a href={resume} target=\"_blank\" rel=\"noopener noreferrer\">\n            <span type='button' className='btn btn--outline'>\n              Resume\n            </span>\n          </a>\n        )}\n\n        {social && (\n          <>\n            {social.github && (\n              <a\n                href={social.github} target=\"_blank\" rel=\"noopener noreferrer\"\n                aria-label='github'\n                className='link link--icon'\n              >\n                <GitHubIcon />\n              </a>\n            )}\n\n            {social.linkedin && (\n              <a\n                href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\"\n                aria-label='linkedin'\n                className='link link--icon'\n              >\n                <LinkedInIcon />\n              </a>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","import uniqid from 'uniqid'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport './ProjectContainer.css'\n\nconst ProjectContainer = ({ project }) => (\n  <div className='project'>\n    <h3>{project.name}</h3>\n\n    <p className='project__description'>{project.description}</p>\n    {project.stack && (\n      <ul className='project__stack'>\n        {project.stack.map((item) => (\n          <li key={uniqid()} className='project__stack-item'>\n            {item}\n          </li>\n        ))}\n      </ul>\n    )}\n\n    {project.sourceCode && (\n      <a\n        href={project.sourceCode} target=\"_blank\" rel=\"noopener noreferrer\"\n        aria-label='source code'\n        className='link link--icon'\n      >\n        <GitHubIcon />\n      </a>\n    )}\n\n    {project.livePreview && (\n      <a\n        href={project.livePreview}  target=\"_blank\" rel=\"noopener noreferrer\"\n        aria-label='live preview'\n        className='link link--icon'\n      >\n        <LaunchIcon />\n      </a>\n    )}\n  </div>\n)\n\nexport default ProjectContainer\n","import uniqid from 'uniqid'\nimport { projects } from '../../portfolio'\nimport ProjectContainer from '../ProjectContainer/ProjectContainer'\nimport './Projects.css'\n\nconst Projects = () => {\n  if (!projects.length) return null\n\n  return (\n    <section id='projects' className='section projects'>\n      <h2 className='section__title'>Projects</h2>\n\n      <div className='projects__grid'>\n        {projects.map((project) => (\n          <ProjectContainer key={uniqid()} project={project} />\n        ))}\n      </div>\n    </section>\n  )\n}\n\nexport default Projects\n","import uniqid from 'uniqid'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport './ExpContainer.css'\n\nconst ExpContainer = ({ exp }) => (\n  <div className='exp'>\n    <h3>{exp.name}</h3>\n    <h4>{exp.position}</h4>\n    <h6>{exp.dates}</h6>\n    <p className='exp__description'>{exp.description}</p>\n    {exp.stack && (\n      <ul className='exp__stack'>\n        {exp.stack.map((item) => (\n          <li key={uniqid()} className='exp__stack-item'>\n            {item}\n          </li>\n        ))}\n      </ul>\n    )}\n\n    {exp.sourceCode && (\n      <a\n        href={exp.sourceCode} target=\"_blank\" rel=\"noopener noreferrer\"\n        aria-label='source code'\n        className='link link--icon'\n      >\n        <GitHubIcon />\n      </a>\n    )}\n\n    {exp.livePreview && (\n      <a\n        href={exp.livePreview} target=\"_blank\" rel=\"noopener noreferrer\"\n        aria-label='live preview'\n        className='link link--icon'\n      >\n        <LaunchIcon />\n      </a>\n    )}\n  </div>\n)\n\nexport default ExpContainer\n","import uniqid from 'uniqid'\nimport { exps }  from '../../portfolio'\nimport ExpContainer from '../ExpContainer/ExpContainer'\nimport './Exps.css'\n\nconst Exps = () => {\n  if (!exps.length) return null\n\n  return (\n    <section id='exps' className='section exps'>\n      <h2 className='section__title'>Experience</h2>\n\n      <div className='exps__grid'>\n        {exps.map((exp) => (\n          <ExpContainer key={uniqid()} exp={exp} />\n        ))}\n      </div>\n    </section>\n  )\n}\n\nexport default Exps\n","import uniqid from 'uniqid'\nimport { skills } from '../../portfolio'\nimport './Skills.css'\n\nconst Skills = () => {\n  if (!skills.length) return null\n\n  return (\n    <section className='section skills' id='skills'>\n      <h2 className='section__title'>Skills</h2>\n      <ul className='skills__list'>\n        {skills.map((skill) => (\n          <li key={uniqid()} className='skills__list-item btn btn--plain'>\n            {skill}\n          </li>\n        ))}\n      </ul>\n    </section>\n  )\n}\n\nexport default Skills\n","import React, { useEffect, useState } from 'react'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport './ScrollToTop.css'\n\nconst ScrollToTop = () => {\n  const [isVisible, setIsVisible] = useState(false)\n\n  useEffect(() => {\n    const toggleVisibility = () =>\n      window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false)\n\n    window.addEventListener('scroll', toggleVisibility)\n    return () => window.removeEventListener('scroll', toggleVisibility)\n  }, [])\n\n  return isVisible ? (\n    <div className='scroll-top'>\n      <a href='#top'>\n        <ArrowUpwardIcon fontSize='large' />\n      </a>\n    </div>\n  ) : null\n}\n\nexport default ScrollToTop\n","import { contact } from '../../portfolio'\nimport './Contact.css'\n\nconst Contact = () => {\n  if (!contact.email) return null\n\n  return (\n    <section className='section contact center' id='contact'>\n      <h2 className='section__title'>Contact</h2>\n      <a href={`mailto:${contact.email}`}>\n        <span type='button' className='btn btn--outline'>\n          Email me\n        </span>\n      </a>\n    </section>\n  )\n}\n\nexport default Contact\n","import './Footer.css'\n\nconst Footer = () => (\n  <footer className='footer'>\n    <a\n      href='https://www.linkedin.com/in/abhinav-tiruveedhula/' target=\"_blank\" rel=\"noopener noreferrer\"\n      className='link footer__link'\n    >   \n    Abhinav Tiruveedhula </a>\n  </footer>\n)\n\nexport default Footer\n","import { useContext } from 'react'\nimport { ThemeContext } from './contexts/theme'\nimport Header from './components/Header/Header'\nimport About from './components/About/About'\nimport Projects from './components/Projects/Projects'\nimport Exps from './components/Exps/Exps'\nimport Skills from './components/Skills/Skills'\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop'\nimport Contact from './components/Contact/Contact'\nimport Footer from './components/Footer/Footer'\nimport './App.css'\n\nconst App = () => {\n  const [{ themeName }] = useContext(ThemeContext)\n\n  return (\n    <div id='top' className={`${themeName} app`}>\n      <Header />\n\n      <main>\n        <About />\n        <Exps />\n        <Projects />\n        <Skills />\n        <Contact />\n      </main>\n\n      <ScrollToTop />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import { render } from 'react-dom'\nimport App from './App'\nimport { ThemeProvider } from './contexts/theme'\nimport './index.css'\n\nrender(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}